#!/usr/bin/env bash
### TEL app launcher ###
version=0.3
removing_app=false
print_ERR_and_die(){
    # Error printing function
    printf "\e[38;5;1m[!]%s\n\e[m"\
           "$*" 1>&2
    exit 1
}

show_help(){
    printf  "%s\n"\
            "tel-app [OPTIONS] [PATTERN]"\
            "__________________________"\
            "OPTIONS"\
            "  -h | --help   		display this help message"\
            "  -i | --info   		show settings page for chosen app"\
            "  -a | --activity      launch by activity path, without fzf"\
            "  -l | --list-apps     list apps and thir launch activities"\
            "  -L | --list-app-names list appps, only names"\
            "  -r | --remove 		remove/uninstall chosen app"\
            "  -u | --update-cache  update app cache"
}

update_cache(){
    printf  "\e[38;5;2m Launcher\e[m: \e[38;5;1mUpdating app cache...%s\n\e[m"
    am broadcast --user 0 \
         --es com.termux.app.reload_style apps-cache \
         -a com.termux.app.reload_style com.termux > /dev/null
}

launch() {
    app_name="$1"
    activity_path="$2"
    printf  "\e[38;5;2m Launching\e[m %s\n"\
        "$app_name - $activity_path"
    # Launch the app
    am start -n "$activity_path" --user 0 > /dev/null 2>&1
}

list_apps() {
    IFS=$'\n' apps=( "$(cat ~/.apps | sort)" )
        for app in ${apps[@]}; do
            IFS='|' read app_name activity package junk <<< "$app"
            if [ "$1" == "-L" ]; then
                echo $app_name
            else
                echo $app_name - $activity
            fi
    done
}

main() {
    cachefile="$HOME/.apps"
    app_namefile="$HOME/.app_names"
    show_info_page="false"
    case "$1" in
        -v | --version)
    		printf  "\e[38;5;2m Launcher\e[m: \e[38;5;1mversion $version"
		exit 0
	;;
        -i | --info)
		shift
        	show_info_page="true"
        ;;
        # Update the app list
        # Incase a new app has been installed
        -u | --update-cache)
        	update_cache
        	exit 0
        ;;
        -r | --remove)
		shift
		removing_app=true
	    ;;
        -l | --list-apps)
            list_apps
            exit 0
            ;;
        -L | --list-app-names)
            list_apps -L
            exit 0
            ;;
        -a | --activity)
            shift
            if [ $# -eq 0 ]; then
                echo Error: No argumenrs given
                exit 1
            elif [ $# -eq 1 ]; then
                IFS='|' read name junk <<< "$(cat ~/.apps | grep "$1")"
                    launch "$name" "$1"
            elif [ $# -eq 2  ]; then
                    launch "$1" "$2"
            else
                echo Error: too many arguments
            fi
            exit 0
            ;;
        # Display the help message
        -h | --help)
            show_help
            exit 0
        ;;
    esac
    if [ ! -f $cachefile ] || [ ! -f $app_namefile ] ; then
	    update_cache
    fi
    # fuzzy search in $app_namefile to get the app code and app 
    # name in this format 
    # app_code | app_name
    app_data=$(fzf -e --prompt=" Choose app: " --query="$*" --color=16 --select-1 -0 < "$app_namefile")
    case "$?" in
        # No app found
        "1"  )
    		printf  "\e[38;5;2m Launcher\e[m: \e[38;5;1mApp not found%s\n\e[m"
		exit 1
        ;;
        # If Ctrl+C is used 
        "130")
            return 1
        ;;
    esac
    # get the app code
    app_code=$( echo "$app_data" | cut -d "|" -f1) 
    # get the app name
    app_name=$( echo "$app_data" | cut -d "|" -f2) 
    
    # No app name recieved
    [[ -z "$app_code" ]] && exit 1

    # get the activity name
    activity=$( grep "$app_code" "$cachefile" | cut -d "|" -f2 )
    
    if [ "$removing_app" == "true" ] ; then
    	printf  "\e[38;5;2m Launcher\e[m: \e[38;5;1mUninstall app '$app_name'? y/N\n\e[m"
	read response
	if [ "$response" == y ] ; then
		activity=$(echo "$activity" | cut -d "/" -f1)
		uninstalled=$(su -c pm uninstall $activity > /dev/null)
		if [ "$?" == 0 ] ; then
			printf "\e[38;5;2m Launcher\e[m: \e[38;5;1m'$app_name' was uninstalled\e[m\e\n"
			update_cache
		else
			printf "\e[33;5;2m Launcher:\e[m error removing $app_name"
			exit 1
		fi
	else
		exit 0
	fi
	exit 0
    elif [ "$show_info_page" == "true" ] ; then
    	printf  "\e[33;5;2m Launching\e[m %s\n"\
            "$app_name - app info page"
	activity=$(echo "$activity" | cut -d "/" -f1)
	am start -a android.settings.APPLICATION_DETAILS_SETTINGS "package:$activity" > /dev/null 2>&1
    else
        launch "$app_name" "$activity"
    fi
}
main "$@"
