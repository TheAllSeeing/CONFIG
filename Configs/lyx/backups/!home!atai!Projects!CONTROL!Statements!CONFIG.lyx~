#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\def\HeblatexEncoding{HE8}
\def\HeblatexEncodingFile{he8enc}

\usepackage[T1]{fontenc}
\usepackage{charter}
\usepackage{environ}
\usepackage{tikz}
\usetikzlibrary{calc,matrix}


\definecolor{violet}{rgb}{0.56, 0.0, 1.0}
\definecolor{purple}{rgb}{0.62, 0.0, 0.77}
\definecolor{gray}{rgb}{0.64, 0.64, 0.64}
\definecolor{steel}{RGB}{206,211,212}
\definecolor{green}{rgb}{0.0, 0.5, 0.0}
\definecolor{blue}{RGB}{11, 11, 96}

\definecolor{lightgray}{RGB}{206,211,212}

\definecolor{chartreuse}{RGB}{154, 205, 50}
\definecolor{khaki}{rgb}{0.74, 0.72, 0.42}
\definecolor{lime}{rgb}{0.74, 0.72, 0.42}

\definecolor{olive}{rgb}{0.74, 0.72, 0.42}
\definecolor{magenta}{RGB}{154, 205, 50}
\definecolor{teal}{rgb}{0.0, 0.5, 0.5}

\definecolor{TextColor}{rgb}{0.95, 0.95, 0.95}
\definecolor{PageColor}{RGB}{60, 60, 60}

% \definecolor{TextColor}{rgb}{0.25, 0.25, 0.25}
% \definecolor{PageColor}{rgb}{1, 1, 1}

% code by Andrew:
% http://tex.stackexchange.com/a/28452/13304
\makeatletter
\let\matamp=&
\catcode`\&=13
\makeatletter
\def&{\iftikz@is@matrix
  \pgfmatrixnextcell
  \else
  \matamp
  \fi}
\makeatother

\newcounter{lines}
\def\endlr{\stepcounter{lines}\\}

\newcounter{vtml}
\setcounter{vtml}{0}

\newif\ifvtimelinetitle
\newif\ifvtimebottomline
\tikzset{description/.style={
  column 2/.append style={#1}
 },
 timeline color/.store in=\vtmlcolor,
 timeline color=red!80!black,
 timeline color st/.style={fill=\vtmlcolor,draw=\vtmlcolor},
 use timeline header/.is if=vtimelinetitle,
 use timeline header=false,
 add bottom line/.is if=vtimebottomline,
 add bottom line=false,
 timeline title/.store in=\vtimelinetitle,
 timeline title={},
 line offset/.store in=\lineoffset,
 line offset=4pt,
}

\NewEnviron{vtimeline}[1][]{%
\setcounter{lines}{1}%
\stepcounter{vtml}%
\begin{tikzpicture}[column 1/.style={anchor=east},
 column 2/.style={anchor=west},
 text depth=0pt,text height=1ex,
 row sep=1ex,
 column sep=1em,
 #1
]
\matrix(vtimeline\thevtml)[matrix of nodes]{\BODY};
\pgfmathtruncatemacro\endmtx{\thelines-1}
\path[timeline color st] 
($(vtimeline\thevtml-1-1.north east)!0.5!(vtimeline\thevtml-1-2.north west)$)--
($(vtimeline\thevtml-\endmtx-1.south east)!0.5!(vtimeline\thevtml-\endmtx-2.south west)$);
\foreach \x in {1,...,\endmtx}{
 \node[circle,timeline color st, inner sep=0.15pt, draw=white, thick] 
 (vtimeline\thevtml-c-\x) at 
 ($(vtimeline\thevtml-\x-1.east)!0.5!(vtimeline\thevtml-\x-2.west)$){};
 \draw[timeline color st](vtimeline\thevtml-c-\x.west)--++(-3pt,0);
 }
 \ifvtimelinetitle%
  \draw[timeline color st]([yshift=\lineoffset]vtimeline\thevtml.north west)--
  ([yshift=\lineoffset]vtimeline\thevtml.north east);
  \node[anchor=west,yshift=16pt,font=\large]
   at (vtimeline\thevtml-1-1.north west) 
   {\textsc{Timeline \thevtml}: \textit{\vtimelinetitle}};
 \else%
  \relax%
 \fi%
 \ifvtimebottomline%
   \draw[timeline color st]([yshift=-\lineoffset]vtimeline\thevtml.south west)--
  ([yshift=-\lineoffset]vtimeline\thevtml.south east);
 \else%
   \relax%
 \fi%
\end{tikzpicture}
}

\color{TextColor}
\pagecolor{PageColor}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "filecolor=teal"
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\backgroundcolor #222831
\fontcolor #ececec
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\color gray
Project Statement: CONFIG
\end_layout

\begin_layout Author
Atai Ambus
\end_layout

\begin_layout Standard

\series bold
Theme:
\series default
 Foundations | Anchoring
\end_layout

\begin_layout Standard

\series bold
ID:
\series default
 210717A
\end_layout

\begin_layout Standard

\series bold
Aspect:
\series default
 
\color gray
Gray
\end_layout

\begin_layout Standard

\series bold
Cloud:
\series default
 git
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
Outline
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard

\series bold
Configure and customize my digital enviornment for needed tools and optimal
 workflow
\end_layout

\begin_layout Section
Context
\end_layout

\begin_layout Standard
As someone who is interested in computer science and software development,
 and regardless enjoys using a digital enviornment and its usage, I'd like
 to be aware of the full extent of my digital enviornments, and construct
 and configure it for my needs.
\end_layout

\begin_layout Standard
The 
\begin_inset Quotes eld
\end_inset

building blocks
\begin_inset Quotes erd
\end_inset

 of the digital enviornment are 
\shape slanted
Software Applications
\shape default
.
 Generally modular pieces of software that provide some function to the
 end user.
 The collection of installed and used apps on a device constructs a matching
 set of software functions, which are in fact the capabilities and 
\begin_inset Quotes eld
\end_inset

User Manual
\begin_inset Quotes erd
\end_inset

 of that machine.
 User Manual in the sense that they dictate not only what the functions
 are, but how they are used.
\end_layout

\begin_layout Itemize

\series bold
AllSeer
\series default
: the Linux environment on my personal computer, via dual boot
\end_layout

\begin_layout Itemize

\series bold
NoSeer
\series default
: the Windows environment on my personal computer, via dual boot
\end_layout

\begin_layout Itemize

\series bold
MiniSeer
\series default
: the Android environment on my personal smartphone
\end_layout

\begin_layout Section
Goals
\end_layout

\begin_layout Enumerate

\bar under
210717A
\bar default
 Keep software tools apropriate for tasks as projects demand, and be able
 to manage and view them with ease
\end_layout

\begin_layout Enumerate

\bar under
210717B
\bar default
 Automate Workflow — if an action is done frequently, it should be automated.
\end_layout

\begin_layout Enumerate

\bar under
210717C
\bar default
 Be familliar with keyboard shortcuts and assign shortcuts to frequently
 used actions, if possible
\end_layout

\begin_layout Enumerate

\bar under
210717D
\bar default
 Sync and localize configs easily — be able to quickly synchronize changes
 to an app configuration through to any relevant devices.
\end_layout

\begin_layout Enumerate

\bar under
210717E
\bar default
 Document configuration, for easy later read.
\end_layout

\begin_layout Enumerate

\bar under
210717F
\bar default
 Keep overviews and homepages minimalistic and distractionless.
 No flooding in many options: content should be opened decisions
\end_layout

\begin_layout Enumerate

\bar under
210717G
\bar default
 If different configurations are needed for different modes of work, be
 able to quickly switch between them
\end_layout

\begin_layout Enumerate

\bar under
210717H
\bar default
 When possible, prevent clutter — in the files apps keep, configuration
 homes, and so on.
\end_layout

\begin_layout Section
Systems
\end_layout

\begin_layout Subsection

\bar under
210804A
\bar default
 App Definition
\end_layout

\begin_layout Standard

\series bold
For the purposes of this project, an app can be any piece of software that
 provides a specific function that I can use as an end-user.
\end_layout

\begin_layout Itemize
An app's 
\emph on
location
\emph default
 can be 
\emph on
local,
\emph default
 
\emph on
remote
\emph default
 or 
\emph on
hybrid.
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
local location 
\emph default
means all of the app's data is located on the end-user machine.
 
\end_layout

\begin_layout Itemize

\emph on
remote location
\emph default
 means the app has data which is required for essential functions and is
 located on the 
\begin_inset Quotes eld
\end_inset

cloud
\begin_inset Quotes erd
\end_inset

 in other computers, to be accessed wirelessly via an Internet connection
 or some other means.
 Apps like WhatsApp, Telegram or Jetbrains Space are concidered remote 
\end_layout

\begin_layout Itemize

\emph on
hybrid location
\emph default
 means that an app has distinct central functions both online and offline,
 or that the app has both local and remote installations.
\end_layout

\end_deeper
\begin_layout Itemize
Each app has a measure of 
\emph on
Web Reliance.
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
Web Dependant 
\emph default
apps if requires a consistent Internet Connection to preform its central
 functions.
\end_layout

\begin_layout Itemize

\emph on
Web Independant
\emph default
 apps require no Internet connection to preform any of its functions.
\end_layout

\begin_layout Itemize
Apps with 
\emph on
Hybrid Web Reliance
\emph default
 
\end_layout

\end_deeper
\begin_layout Itemize
An app has an 
\emph on
Interface
\emph default
 which may be 
\emph on
CLI
\emph default
, 
\emph on
GUI
\emph default
 or 
\emph on
Hybrid
\emph default
 (both).
\end_layout

\begin_layout Itemize
An app can be classified by its place in a 
\emph on
Workflow, 
\emph default
as a 
\emph on
platform
\emph default
,
\emph on
 central
\emph default
, 
\emph on
daemon
\emph default
,
\emph on
 utility 
\emph default
or
\emph on
 dependancy 
\emph default
app.
 An app may serve multiple functions fitting specific use-cases, and so
 may have concurrent Workflow classifications.
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
Central 
\emph default
apps are the apps that are continously used for work.
 They are characterized by unbroken interaction which is stopped only if
 prompted by the user.
 Most user input is preformed for central apps.
 These include word processors, browsers, terminal emulators and so on.
\end_layout

\begin_layout Itemize

\emph on
Platform
\emph default
 apps are apps that other apps run on or that manage apps' installation.
 They are not used for work directly but they provide the apps that are.
 These include package managers, desktop enviornments, and so on.
\end_layout

\begin_layout Itemize

\emph on
Daemon
\emph default
 apps are apps that run in the background, and act on certain triggers to
 automate workflow.
\end_layout

\begin_layout Itemize

\emph on
Utility
\emph default
 apps are used for work, but they are for momentary use rather than continous.
 They are characterized by a single-command usage which executes a process
 and then exits, and can be used in scripts without requiring any user input.
 These include APIs, file converters, some software interperters and so
 on.
\end_layout

\begin_layout Itemize

\emph on
Dependancy
\emph default
 apps are not used directly at all, but rather are required to install manually
 prior to installation of other apps.
 These may be varied, sometimes API suites, sometimes utilities and sometimes
 fully functional Central apps.
\end_layout

\end_deeper
\begin_layout Itemize
An app is concidered 
\emph on
installed
\emph default
 if it can be ran with expected behaviour at will via its platform interface,
 without farther set up.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Local apps are concidered installed with respect to a specific device, while
 remote apps are installed globally, on the 
\begin_inset Quotes eld
\end_inset

web
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Itemize
Hybrid apps may be installed both on specific device and on the web, or
 only locally (if 
\end_layout

\end_deeper
\begin_layout Itemize
An app is concidered 
\emph on
configurable
\emph default
 if its behaviour can be changed persistenly in ways intended by the designer.
\end_layout

\begin_deeper
\begin_layout Itemize
For web apps that require no set up (a-la YNet), there is also a measure
 of 
\emph on
relevance
\emph default
.
 Such app is concidered relevant if it is used at least weekly, and installed
 only if it is 
\shape slanted
relevant
\shape default
.
 This is a measure to keep track of web apps I use yet without including
 millions of sites, in that category.
\end_layout

\end_deeper
\begin_layout Standard
Apps I use should also contain:
\end_layout

\begin_layout Itemize
An ID by CONTROL/System210601A
\end_layout

\begin_layout Itemize
A list of relevant text tags
\end_layout

\begin_layout Itemize
An 
\shape slanted
Installation Caue
\shape default
, as described in 
\shape slanted
System210803A
\end_layout

\begin_layout Subsection

\bar under
210803A
\bar default
 Installation Causes & App Requests
\end_layout

\begin_layout Standard
Concidering 
\shape slanted
Goal210717F
\shape default
 and 
\shape slanted
Goal210717H, 
\shape default
apps should only be installed if they have a specific reason to be.
 As such, every installed app should have a specified 
\emph on
Installation Cause
\emph default
, detailing its need.
\end_layout

\begin_layout Standard
A project which needs some software for its work can create an Installation
 Cause for it if it makes a formal 
\emph on
App Request
\emph default
 in one of its systems.
 Such requests should be Identified according to 
\shape slanted
CONTROL/System210601A
\shape default
.
\end_layout

\begin_layout Standard
In addition to these apps that are requested for other project systems,
 this project will specifies additional classes of apps to be installed
 even if no other project requires them.
\end_layout

\begin_layout Standard
Such apps should be specified if either
\end_layout

\begin_layout Enumerate

\series bold
Their function is largely useful for most objectives
\series default
.
 For example, every project reuqires some form of textual work, and as such
 a text editor is pretty ubiqotus in its ability to easily preform simple
 text manipulations and keep textual data.
 Apps that are neccessary for other apps to function (such as interfaces
 or package managers) are also included in this category.
\end_layout

\begin_layout Enumerate

\series bold
Their function is used commonly, 
\series default
for a project using them to always be at least created soon.
 Software development being a frequent practice for me, at time of writing,
 implies permnant installtion of IDEs should be useful enough.
\end_layout

\begin_layout Standard

\bar under
Currently specified App Requesrs are as follows:
\end_layout

\begin_layout Enumerate

\bar under
210813A
\shape slanted
\bar default
 Hardware Support: 
\shape default
Driver and front-end support for device sensors and inputs, such as keyboards,
 touchscreen, accelorometer, and so on
\end_layout

\begin_layout Enumerate

\bar under
210813B
\shape slanted
\bar default
 IoT (Internet of Things):
\shape default
 API and/or Frontend to interface with existing distinct electronic devices,
 such as smart watch, printer, and so on.
\end_layout

\begin_layout Enumerate

\bar under
210813C
\shape slanted
\bar default
 Interfaces: 
\shape default
Base interface components for GUI and CLI apps — desktop enviornment, window
 manager, terminal emulator, and so on.
\end_layout

\begin_layout Enumerate

\bar under
210813D
\bar default
 
\shape slanted
System Boot:
\shape default
 Boot utilities such as recovery menu, grub, etc.
\end_layout

\begin_layout Enumerate

\bar under
210813E
\shape slanted
\bar default
 Package Management:
\shape default
 Utility to install and remove applications and dependancies, view installed
 apps, their dependancies, which apps depend on them and what packages commands
 or apps belong too..
 
\end_layout

\begin_layout Enumerate

\bar under
210813F
\shape slanted
\bar default
 System Diagnostics:
\shape default
 Logging utilities for tracking system calls and app logs, such as strace,
 ltrace, journalctl and so on.
\end_layout

\begin_layout Enumerate

\bar under
210813G
\shape slanted
\bar default
 File Management: 
\shape default
App(s) to view, create, modify, move, copy, rename, search and locate regular
 files and directories, in both GUI and CLI.
 This may include core-utils package, grep, File Explorer, and so on.
\end_layout

\begin_layout Enumerate

\bar under
210813H
\bar default
 
\shape slanted
Communication:
\shape default
 Apps to recieve and send instant messages, specifically via WhatsApp and
 Telegram.
 Apps to recieve and send phone calls.
 Apps to initiate and participate in video and/or audio conferences, specificall
y Zoom and Discord.
\end_layout

\begin_layout Enumerate

\bar under
210813I
\shape slanted
\bar default
 Office Suite: 
\shape default
Apps to view, create and modify documents, slide presentations, spreadsheets
 and calendars.
 Apps to view, label, search and send emails.
 App
\end_layout

\begin_layout Enumerate

\bar under
210813J
\shape slanted
\bar default
 Development Tools: 
\shape default
Apps to create, edit, modify and test code, version control systems.
\end_layout

\begin_layout Subsection

\bar under
210717A
\bar default
 App Index
\end_layout

\begin_layout Standard
In order to clean uninstalled apps, get new devices up to speed and quickly
 find relevant configuration data, a list of the apps that are installed
 or intended to be installed, called the 
\emph on
App Index
\emph default
, should be maintained.
\end_layout

\begin_layout Standard
The list should be kept in a CSV file edited in Google Sheets.
\end_layout

\begin_layout Standard
The list should also contain all of the properties described in 
\shape slanted
System210804A.
\end_layout

\begin_layout Standard
Since app are complex objects, a possible better replacement for this is
 using a full database, a-la firebase, and make a small app to send them.
 Then more complicated processing will be eased by a loy.
\end_layout

\begin_layout Subsection

\bar under
210717F
\bar default
 App Statements
\end_layout

\begin_layout Standard
A configuration statement is a document describing an app's configuration
 and behaviour, and any plugins, add-ons, extensions or equivalent software.
\end_layout

\begin_layout Standard
I will specify the strict structure and rules for this statement in a later
 date, while writing the first of them.
 Roughly, these statements should contain all of the app's properties ad
 described SYstem210717A
\end_layout

\begin_layout Subsection

\bar under
210717B
\bar default
 Configuration Homes & Config Directory
\end_layout

\begin_layout Standard
Often, configurations are kept in local files on the device, in a single
 file, in a myriad of files under a single directory, or even under multiple
 files scattered accross different directories.
\end_layout

\begin_layout Standard
A subdirectory 
\shape slanted
Config 
\shape default
should be created Apps specified in the 
\emph on
App Index
\emph default
 that are configurable should have a Configuration Directory, of the form
 ID.Snake_Pascal_Title.
 This directory should be copied from the app's ususal configuration directory.
 Then.
 the app's original configuration directory should be trashed and its directory
 in 
\shape slanted
Config
\shape default
 should be symbolically linked to that original location.
\end_layout

\begin_layout Subsection

\bar under
210814A
\bar default
 Derived Apps
\end_layout

\begin_layout Standard
Let
\emph on
 Derived Apps
\emph default
, which are any fork of an existing app or apps that are backwards compatible.
\end_layout

\begin_layout Standard
Rather than placed directly in 
\shape slanted
Config
\shape default
, Configuration Homes for Derived Apps should be placed as subdirectories
 in a single parent directory for the app that they are derived from.
 For example, a configuration Home for apps 
\family typewriter
foo
\family default
 and 
\family typewriter
bar
\family default
 derived from a third app 
\family typewriter
baz
\family default
, will be placed under 
\family typewriter
Configs/baz/foo
\family default
 and 
\family typewriter
Configs/baz/bar
\family default
, respectively.
\end_layout

\begin_layout Standard
Configuration Home for the app they are derived from will also be placed
 in that directory.
 In our example, the configuration home for 
\family typewriter
baz
\family default
 will be located at 
\family typewriter
Configs/baz/baz
\family default
.
 This is done to make sure configuration homes match the actual configuration
 directory the app is looking for, and don't have extra files.
\end_layout

\begin_layout Standard
The system is set in place in order to easily utilize common configurations
 and prevent duplicate code.
 For example, many configurations for bothe zsh and bash can be written
 in the Bourne Shell sh, and there is no reason to try and synchronize zshrc
 and bashrc for things such as aliases and variables, when putting them
 in one sh file is enough.
\end_layout

\begin_layout Subsection

\bar under
210814B
\bar default
 Plugins
\end_layout

\begin_layout Standard

\emph on
Plugins
\emph default
, also known as 
\begin_inset Quotes eld
\end_inset

Add Ons
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Extensions
\begin_inset Quotes erd
\end_inset

, are apps that cannot run by themselves but enhance the functionality of
 another app.
 
\end_layout

\begin_layout Standard
Plugins are seen as a type of configuration of the app they enhance, and
 should be detailed in that app's statement.
 As such, plugins should not be indexed as apps.
\end_layout

\begin_layout Standard
However, some plugins may be configurable, some even using configuration
 files.
 For this reason, they do recieve Configuration Homes.
 In order to clarify their connection and dependancy though, they should
 be nested in their app's folder, and be concidered as Derived Apps (See
 
\shape slanted
System210814A
\shape default
) for this purpose.
\end_layout

\begin_layout Standard
From 
\shape slanted
System210717C
\shape default
, preference to FOSS apps is retained for Plugins.
\backslash

\end_layout

\begin_layout Subsection

\bar under
210814B
\bar default
 Configuration Principles
\end_layout

\begin_layout Standard
There is a number of principles that should be kept in mind
\end_layout

\begin_layout Paragraph
Uniformity
\end_layout

\begin_layout Standard
Apps' configuration configuration should be largely the same between devices.
 App Requests should be implemneted in similar ways between devices, as
 much as possible.
\end_layout

\begin_layout Standard
The idea here is to maintain portability of configuration files, to prevent
 extra work, to minimize information that needs to be remembered (with regards
 to the operation of different apps) and to utilzie muscle memory (for example
 with respect to keyboard shortcuts).
\end_layout

\begin_layout Paragraph
Speed
\end_layout

\begin_layout Standard
The apps' workflow should be optimized for speed.
\end_layout

\begin_layout Itemize
Defaults should be set according to the most frequently used parameters,
 and inserting other frequent parameters should be fast also.
\end_layout

\begin_layout Itemize
Regular runs of an apps in a specific way should be automated, if possible.
 
\end_layout

\begin_layout Itemize
Keyboard shortcuts should be prefereble to clicking and freuquent actions
 should be assigned such shortcuts, if possible.
\end_layout

\begin_layout Paragraph
Minimalism
\end_layout

\begin_layout Standard
Clutter should be avoided, 
\end_layout

\begin_layout Paragraph
Readability
\end_layout

\begin_layout Paragraph
Agility
\end_layout

\begin_layout Subsection

\bar under
210814C
\bar default
 Device Branches & Portability
\end_layout

\begin_layout Standard
Even keeping in mind the Principle of Uniformity of 
\shape slanted
System210814B
\shape default
, it is often impossinle to completely maintain portability.
 
\end_layout

\begin_layout Subsection

\bar under
210717C
\bar default
 Linux Enviornments & FOSS Software
\end_layout

\begin_layout Section
Timeline
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
begin{vtimeline}[description={text width=7cm},
\end_layout

\begin_layout Plain Layout

	row sep=4ex,
\end_layout

\begin_layout Plain Layout

	timeline color=steel,
\end_layout

\begin_layout Plain Layout

	use timeline header,
\end_layout

\begin_layout Plain Layout

	timeline title={Project Setup}]
\end_layout

\begin_layout Plain Layout


\backslash
end{vtimeline}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
Status
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Section
Open Tasks
\end_layout

\begin_layout Section
Open Habits
\end_layout

\begin_layout Section
Open Issues
\end_layout

\begin_layout Standard
N/A
\end_layout

\begin_layout Section
Open Proposals
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
Results
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Section
Incidents
\end_layout

\begin_layout Section
Work
\end_layout

\begin_layout Section
Progress
\end_layout

\begin_layout Section
Closed Issues
\end_layout

\begin_layout Section
Closed Proposals
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
Reflections
\end_layout

\begin_layout Section
Lessons
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
\start_of_appendix
Appendixes
\end_layout

\begin_layout Section
App Tag List
\end_layout

\begin_layout Standard
A list of app tags detailed in the app index, as per 
\shape slanted
System210717A
\shape default
, ordered by frequency of usage.
\end_layout

\begin_layout Enumerate
files
\end_layout

\begin_layout Enumerate
ide
\end_layout

\begin_layout Enumerate
media
\end_layout

\begin_layout Enumerate
keyboard
\end_layout

\begin_layout Enumerate
shell
\end_layout

\begin_layout Enumerate
x11
\end_layout

\begin_layout Enumerate
jetbrains
\end_layout

\begin_layout Enumerate
package-manager
\end_layout

\begin_layout Enumerate
pdf
\end_layout

\begin_layout Enumerate
python
\end_layout

\begin_layout Enumerate
browser
\end_layout

\begin_layout Enumerate
build
\end_layout

\begin_layout Enumerate
development
\end_layout

\begin_layout Enumerate
java
\end_layout

\begin_layout Enumerate
media-player
\end_layout

\begin_layout Enumerate
mount
\end_layout

\begin_layout Enumerate
terminal
\end_layout

\begin_layout Enumerate
text-editor
\end_layout

\begin_layout Enumerate
vcs
\end_layout

\begin_layout Enumerate
version-control-system
\end_layout

\begin_layout Enumerate
web
\end_layout

\begin_layout Enumerate
window
\end_layout

\begin_layout Enumerate
android
\end_layout

\begin_layout Enumerate
antivirus
\end_layout

\begin_layout Enumerate
audio
\end_layout

\begin_layout Enumerate
backup
\end_layout

\begin_layout Enumerate
chats
\end_layout

\begin_layout Enumerate
conversion
\end_layout

\begin_layout Enumerate
desktop
\end_layout

\begin_layout Enumerate
dev
\end_layout

\begin_layout Enumerate
developers
\end_layout

\begin_layout Enumerate
document-processor
\end_layout

\begin_layout Enumerate
download
\end_layout

\begin_layout Enumerate
file-browser
\end_layout

\begin_layout Enumerate
find
\end_layout

\begin_layout Enumerate
git
\end_layout

\begin_layout Enumerate
google-drive
\end_layout

\begin_layout Enumerate
instant-messaging
\end_layout

\begin_layout Enumerate
language
\end_layout

\begin_layout Enumerate
latex
\end_layout

\begin_layout Enumerate
locate
\end_layout

\begin_layout Enumerate
ls
\end_layout

\begin_layout Enumerate
microsoft-office
\end_layout

\begin_layout Enumerate
monitor
\end_layout

\begin_layout Enumerate
music
\end_layout

\begin_layout Enumerate
network
\end_layout

\begin_layout Enumerate
office
\end_layout

\begin_layout Enumerate
pdf-editor
\end_layout

\begin_layout Enumerate
rar
\end_layout

\begin_layout Enumerate
screen
\end_layout

\begin_layout Enumerate
screen-recorder
\end_layout

\begin_layout Enumerate
search
\end_layout

\begin_layout Enumerate
ssh
\end_layout

\begin_layout Enumerate
streaming
\end_layout

\begin_layout Enumerate
style
\end_layout

\begin_layout Enumerate
symlink
\end_layout

\begin_layout Enumerate
torremt
\end_layout

\begin_layout Enumerate
touch
\end_layout

\begin_layout Enumerate
trash
\end_layout

\begin_layout Enumerate
video
\end_layout

\begin_layout Enumerate
video-conference
\end_layout

\begin_layout Enumerate
viewer
\end_layout

\begin_layout Enumerate
watch
\end_layout

\begin_layout Enumerate
word-processor
\end_layout

\begin_layout Enumerate
xdg
\end_layout

\begin_layout Enumerate
youtube
\end_layout

\begin_layout Enumerate
zip
\end_layout

\begin_layout Section
xdg-open with file-open and url-open
\end_layout

\begin_layout LyX-Code
open() {
\end_layout

\begin_deeper
\begin_layout LyX-Code
if  [[ $@ =~ https?://.* ]]; then
\end_layout

\begin_deeper
\begin_layout LyX-Code
url-open $@
\end_layout

\end_deeper
\begin_layout LyX-Code
else
\end_layout

\begin_deeper
\begin_layout LyX-Code
file-open $@
\end_layout

\end_deeper
\end_deeper
\begin_layout LyX-Code
}
\end_layout

\end_body
\end_document
